name: Test continuous-testing-demo

on:
  push:
    paths:
      - 'continuous-testing-demo/**'
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-backend:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: 'latest'
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
          cache-dependency-path: 'continuous-testing-demo/pom.xml'

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

      - name: Start PostgreSQL Database
        run: docker compose -f docker-compose-db.yml up -d

      - name: Wait for database to be ready
        run: |
          until docker compose -f docker-compose-db.yml exec db pg_isready; do
            echo "Waiting for database to be ready..."
            sleep 1
          done

      - name: Set execute permission for the test script
        run: chmod +x .github/cicd/execute-test.sh

      - name: Execute test script
        env: # Setze Umgebungsvariablen f√ºr die Verbindung zur DB
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/db
          SPRING_DATASOURCE_USERNAME: app
          SPRING_DATASOURCE_PASSWORD: app
        run: ./.github/cicd/execute-test.sh